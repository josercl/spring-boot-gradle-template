openapi: "3.0.2"
info:
  version: "0.0.1"
  title: API Specs
paths:
  /persons:
    post:
      summary: Create Person
      operationId: createPerson
      tags:
        - persons
      x-webclient-blocking: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePerson'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        '422':
          $ref: "#/components/responses/InvalidRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/DefaultError"
    get:
      summary: List Persons
      operationId: listPersons
      tags:
        - persons
      x-webclient-blocking: true
      parameters:
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: A paged list of persons
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonPage"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/DefaultError"
  /persons/{id}:
    get:
      summary: Show Person
      operationId: showPerson
      tags:
        - persons
      x-webclient-blocking: true
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/DefaultError"

components:
  responses:
    InvalidRequest:
      description: Invalid request input
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ValidationErrors"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    DefaultError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    GenericPage:
      type: object
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total_elements:
          type: integer
        total_pages:
          type: integer
    PersonPage:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/GenericPage'
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          default: 0
        size:
          type: integer
          format: int32
          default: 20
    CreatePerson:
      required:
        - name
        - age
        - phone_number
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
          minimum: 18
        phone_number:
          type: string
          format: phone
    Person:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        age:
          type: integer
          format: int32
        phone_number:
          type: string
          format: phone
    Persons:
      type: array
      items:
        $ref: "#/components/schemas/Person"
    ValidationErrors:
      type: array
      items:
        $ref: '#/components/schemas/ValidationError'
    ValidationError:
      properties:
        field:
          type: string
        errors:
          type: array
          items:
            type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
